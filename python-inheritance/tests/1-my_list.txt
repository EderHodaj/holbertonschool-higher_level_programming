Test for Mylist module

It prints a sorted copy of a list

	>>> MyList = __import__('1-my_list').MyList

It can print a sorted list with positive ints where the largest int in any part of the list

	>>> ls1 = MyList([1, 4, 2, 3, 5])
	>>> ls1.print_sorted()
	[1, 2, 3, 4, 5]
	[1, 2, 3, 4, 5]

	>>> ls2 = MyList([6, 3, 4, 1, 2])
	>>> ls2.print_sorted()
	[1, 2, 3, 4, 6]
	[1, 2, 3, 4, 6]
	>>> ls2.append(5)
	>>> ls2.print_sorted()
	[1, 2, 3, 4, 5, 6]
	[1, 2, 3, 4, 5, 6]

	>>> ls3 = MyList([1, 4, 5, 2, 3])
	>>> ls3.print_sorted()
	[1, 2, 3, 4, 5]
	[1, 2, 3, 4, 5]

It can also sort negative ints

	>>> ls4 = MyList([-3, -7, 1, 0, 4])
	>>> ls4.print_sorted()
	[-7, -3, 0, 1, 4]
	[-7, -3, 0, 1, 4]

	>>> ls5 = MyList([-4, -2, -6, -7, -1])
	>>> ls5.print_sorted()
	[-7, -6, -4, -2, -1]
	[-7, -6, -4, -2, -1]

it can also sort strings in alphabetic order where the last one can be in any part of the list

	>>> str1 = MyList(['b', 'c', 'e', 'd', 'a'])
	>>> str1.print_sorted()
	['a', 'b', 'c', 'd', 'e']
	['a', 'b', 'c', 'd', 'e']

	>>> str2 = MyList(['e', 'a', 'd', 'b', 'c'])
	>>> str2.print_sorted()
	['a', 'b', 'c', 'd', 'e']
	['a', 'b', 'c', 'd', 'e']

	>>> str3 = MyList(['b', 'a', 'c', 'd', 'e'])
	>>> str3.print_sorted()
	['a', 'b', 'c', 'd', 'e']
	['a', 'b', 'c', 'd', 'e']

It can sort boolean values

	>>> bool_list = MyList([True, False])
	>>> bool_list.print_sorted()
	[False, True]
	[False, True]

It can sort float values, positive and negative

	>>> float_list0 = MyList([1.7, 1.2, 1.4, 1.3])
	>>> float_list0.print_sorted()
	[1.2, 1.3, 1.4, 1.7]
	[1.2, 1.3, 1.4, 1.7]

	>>> float_list1 = MyList([-1.3, -2.7, 0.3, 1.3, 0.1])
	>>> float_list1.print_sorted()
	[-2.7, -1.3, 0.1, 0.3, 1.3]
	[-2.7, -1.3, 0.1, 0.3, 1.3]

It returns the same list if list is empty

	>>> empty = MyList([])
	>>> empty.print_sorted()
	[]
	[]

It returns a new list also

	>>> old = MyList([2, 1])
	>>> new = old.print_sorted
	>>> new
	<bound method MyList.print_sorted of [2, 1]>
